
from datapoint import DataPoint
from telemetry.telemetry import Telemetry

DATAPOINTS = {
    #def __init__(self, codec_type: str, sqlach_type: str, data_func):
    "time": DataPoint('double', 'Integer',), # what is the func?
    # "vboost_1": DataPoint('ushort','Integer',lambda :),
    # "vboost_2": DataPoint('ushort','Integer',),
    # "vboost_3": DataPoint('ushort','Integer',),
    # "vbatt": DataPoint('ushort','Integer',),
    # "curin_1": DataPoint('ushort','Integer',),
    # "curin_2": DataPoint('ushort','Integer',),
    # "curin_3": DataPoint('ushort','Integer',),
    # "sun_current": DataPoint('ushort','Integer',),
    # "cursys": DataPoint('ushort','Integer',),
    # "curout1": DataPoint('ushort','Integer',),
    # "curout2": DataPoint('ushort','Integer',),
    # "curout3": DataPoint('ushort','Integer',),
    # "curout4": DataPoint('ushort','Integer',),
    # "curout5": DataPoint('ushort','Integer',),
    # "curout6": DataPoint('ushort','Integer',),
    # "outputs": DataPoint('ushort','Integer',),
    # "latchup1": DataPoint('ushort','Integer',),
    # "latchup2": DataPoint('ushort','Integer',),
    # "latchup3": DataPoint('ushort','Integer',),
    # "latchup4": DataPoint('ushort','Integer',),
    # "latchup5": DataPoint('ushort','Integer',),
    # "latchup6": DataPoint('ushort','Integer',),
    # "wdt_time_i2c": DataPoint('int','Integer',),
    # "wdt_time_gnd": DataPoint('int','Integer',),
    # "wdt_counts_i2c": DataPoint('int','Integer',),
    # "wdt_counts_gnd": DataPoint('int','Integer',),
    # "gom_boots": DataPoint('int','Integer',),
    # "bootcause": DataPoint('uint8','Integer',),
    # "battmode": DataPoint('uint8','Integer',),
    # "hk_temp_1": DataPoint('uint8','Integer',),
    # "hk_temp_2": DataPoint('uint8','Integer',),
    # "hk_temp_3": DataPoint('uint8','Integer',),
    # "hk_temp_4": DataPoint('uint8','Integer',),
    # "ppt_mode": DataPoint('uint8','Integer',),
    # "reserved2": DataPoint('ushort','Integer',),
    # "rtc_time": DataPoint('double','Float',),
    # "rpi_cpu": DataPoint('uint8','Integer',),
    # "rpi_ram": DataPoint('uint8','Integer',),
    # "rpi_disk": DataPoint('uint8','Integer',),
    # "rpi_temp": DataPoint('float','Integer',),
    # "rpi_boot": DataPoint('float','Integer',),
    # "rpi_uptime": DataPoint('float','Integer',),
    # "gyro_x": DataPoint('float','Float',),
    # "gyro_y": DataPoint('float','Float',),
    # "gyro_z": DataPoint('float','Float',),
    # "acc_x": DataPoint('float','Float',),
    # "acc_y": DataPoint('float','Float',),
    # "acc_z": DataPoint('float','Float',),
    # "mag_x": DataPoint('float','Float',),
    # "mag_y": DataPoint('float','Float',),
    # "mag_z": DataPoint('float','Float',),
    # "gyro_temp": DataPoint('uint8','Float',),
    # "thermo_temp": DataPoint('float','Float',),
    # "prs_pressure": DataPoint('float','Float',),
    # "position_x": DataPoint('double', None, lambda :0),
    # "position_y": DataPoint('double', None, lambda :1),
    # "position_z": DataPoint('double', None, lambda :2),
    # "attitude_1": DataPoint('double', None, lambda :3),
    # "attitude_2": DataPoint('double', None, lambda :4),
    # "attitude_3": DataPoint('double', None, lambda :5),
    # "attitude_4": DataPoint('double', None, lambda :6),
}
    